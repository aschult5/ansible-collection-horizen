---
- hosts: all
  gather_facts: yes
  vars:
    zend_ver: latest
    zend_user_name: zenops
    zend_user_id: 9001
    zend_group_name: zenops
    zend_group_id: 9001
    zend_user_home: /home/{{ zend_user_name }}
    zend_user_shell: /bin/bash
    zend_user_groups_default: [ "adm", "systemd-journal", "sudo", "{{ zend_group_name }}"]
    zend_user_groups: []
    zend_svc_name: zend
    zend_zcash_srcvol: zcash-params
    zend_port_p2p: "9033"
    firewall_allowed_tcp_ports: ["22", "{{ zend_port_p2p }}"]
    certbot_certs:
      - domains:
        - "{{ inventory_hostname }}"

  pre_tasks:
  - name: Create zend group with gid
    group:
      name: "{{ zend_group_name }}"
      gid: "{{ zend_group_id }}"

  - name: Create user groups
    group:
      name: "{{ item }}"
    loop: "{{ zend_user_groups_default + zend_user_groups }}"

  - name: Create user
    user:
      name: "{{ zend_user_name }}"
      uid: "{{ zend_user_id }}"
      comment: "{{ zend_user_name }}"
      shell: "{{ zend_user_shell }}"
      groups: "{{ (zend_user_groups_default + zend_user_groups) | join(',') }}"
      home: "{{ zend_user_home }}"

  - name: pip install docker
    pip: name=docker

  - name: zcash-params volume info
    docker_volume_info:
      name: "{{ zend_zcash_srcvol }}"
      docker_host: "{{ zend_docker_host }}"
    register: zend_zcash_srcvol_info

  - name: zen-fetch-params
    when: not zend_zcash_srcvol_info.exists
    docker_container:
      name: zen-fetch-params
      docker_host: "{{ zend_docker_host }}"
      image: zencash/zen-node:{{ zend_ver }}
      state: started
      command: zen-fetch-params
      detach: no
      volumes:
      - "{{ [zend_zcash_srcvol, '/mnt/zcash-params'] | join(':') }}"
      env:
        LOCAL_USER_ID: "{{ zend_user_id | quote }}"
        LOCAL_GRP_ID: "{{ zend_group_id | quote }}"
    register: zen_fetch_params
    until: zen_fetch_params is success
    retries: 5
    delay: 10

  - name: Add required ports for certificate generation to allow list
    when: certbot_create_if_missing | d()
    set_fact:
      firewall_allowed_tcp_ports: "{{ (firewall_allowed_tcp_ports + ['80', '443']) | unique }}"
    tags:
      - firewall
      - certificate

  - name: Install systemd-cron for certbot
    apt: name=systemd-cron
    tags: certificate

  roles:
  - role: geerlingguy.swap
    vars:
      swap_swappiness: '10'
    tags: swap

  - role: geerlingguy.firewall
    tags: firewall

  - role: geerlingguy.certbot
    vars:
      certbot_auto_renew_user: root
      certbot_auto_renew_options: "-q --deploy-hook \"systemctl restart {{ zend_svc_name }}\""
      certbot_auto_renew_hour: "6"
      certbot_auto_renew_minute: "0"
      certbot_create_standalone_stop_services: []
      certbot_certs:
      - domains:
        - "{{ inventory_hostname }}"
    tags: certificate

  - role: aschult5.zend
    tags: always
